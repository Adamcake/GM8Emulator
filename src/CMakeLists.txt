# it uses globs, remake on pull. it's not that hard.
file(GLOB_RECURSE Source "*.cpp" "*.cxx")
file(GLOB_RECURSE Headers "*.hxx" "*.hpp" "*.h")

add_executable(GM8Emulator ${Source} ${Headers} "pch.cpp" "pch.h")
add_precompiled_header(GM8Emulator "pch.h" SOURCE_CXX "pch.cpp")
source_group("Headers" FILES ${Headers})
source_group("Source" FILES ${Source})
target_sources(GM8Emulator PUBLIC "../deps/glad/src/glad.c")
include_directories("../deps/glfw/include")
include_directories("../deps/rectpack2D/src")
include_directories("../deps/zlib")
include_directories("../deps/glad/include/")
include_directories(.)
target_link_libraries(GM8Emulator glfw)
target_link_libraries(GM8Emulator zlibstatic)

find_package(OpenGL REQUIRED)
if(OPENGL_FOUND)
    target_include_directories(GM8Emulator PUBLIC ${OPENGL_INCLUDE_DIR})
    target_link_libraries(GM8Emulator ${OPENGL_gl_LIBRARY})
else()
    message(FATAL_ERROR "Could not find OpenGL!")
endif()
