# it uses globs, remake on pull. it's not that hard.
file(GLOB Source "*.cpp")
file(GLOB Headers "*.hpp" "*.h")

add_executable(GM8Emulator ${Source} ${Headers} "pch.cpp" "pch.h")
add_precompiled_header(GM8Emulator "pch.h" SOURCE_CXX "pch.cpp")
source_group("Headers" FILES ${Headers})
source_group("Source" FILES ${Source})

include_directories("../deps/glfw/include")
include_directories("../deps/zlib")
include_directories(.)
target_link_libraries(GM8Emulator glfw)
target_link_libraries(GM8Emulator zlibstatic)

find_package(OpenGL REQUIRED)
if(OPENGL_FOUND)
    target_include_directories(GM8Emulator PUBLIC ${OPENGL_INCLUDE_DIR})
    target_link_libraries(GM8Emulator ${OPENGL_gl_LIBRARY})
else()
    message(FATAL_ERROR "Could not find OpenGL!")
endif()

if(MSVC)
    target_include_directories(GM8Emulator PUBLIC "../vs_deps/glew/include")

    if(CMAKE_SIZEOF_VOID_P EQUAL 8)
        target_link_libraries(GM8Emulator "../vs_deps/glew/lib/glew64")
    elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
        target_link_libraries(GM8Emulator "../vs_deps/glew/lib/glew")
    endif()
else()
    find_package(GLEW REQUIRED)
    if(GLEW_FOUND)
        include_directories(${ZLIB_INCLUDE_DIRS})
        target_link_libraries(GM8Emulator ${ZLIB_LIBRARIES})
    endif()
endif()